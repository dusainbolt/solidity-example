{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_78": {
					"entryPoint": null,
					"id": 78,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_t_address_fromMemory": {
					"entryPoint": 381,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address_fromMemory": {
					"entryPoint": 402,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 340,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 308,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 303,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 358,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1199:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:2",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:2"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:2"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:2",
										"type": ""
									}
								],
								"src": "7:75:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:2"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:2"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "404:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "411:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "400:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "400:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:2",
										"type": ""
									}
								],
								"src": "334:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "511:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "521:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "550:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "532:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "521:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "493:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "503:7:2",
										"type": ""
									}
								],
								"src": "466:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "611:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "668:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "677:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "680:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "670:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "670:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "670:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "659:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "641:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "631:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "631:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "624:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "624:43:2"
											},
											"nodeType": "YulIf",
											"src": "621:63:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "604:5:2",
										"type": ""
									}
								],
								"src": "568:122:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "759:80:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "769:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "784:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "778:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "778:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "769:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "827:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "800:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "800:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "800:33:2"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "737:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "745:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "753:5:2",
										"type": ""
									}
								],
								"src": "696:143:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "922:274:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "968:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "970:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "970:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "970:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "943:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "952:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "939:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "939:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "964:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "935:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "935:32:2"
											},
											"nodeType": "YulIf",
											"src": "932:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "1061:128:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1076:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1090:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1080:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1105:74:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1162:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1147:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1171:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1115:31:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1115:64:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1105:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "892:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "903:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "915:6:2",
										"type": ""
									}
								],
								"src": "845:351:2"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405260405161001090610122565b604051809103906000f08015801561002c573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561007957600080fd5b5060405161085e38038061085e833981810160405281019061009b9190610192565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101bf565b6101da8061068483390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015f82610134565b9050919050565b61016f81610154565b811461017a57600080fd5b50565b60008151905061018c81610166565b92915050565b6000602082840312156101a8576101a761012f565b5b60006101b68482850161017d565b91505092915050565b6104b6806101ce6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637bd643f7146100515780638124b78e1461005b5780638abf60771461008b5780638da5cb5b146100a9575b600080fd5b6100596100c7565b005b6100756004803603810190610070919061036a565b610253565b60405161008291906103a6565b60405180910390f35b6100936102bd565b6040516100a091906103a6565b60405180910390f35b6100b16102e3565b6040516100be91906103a6565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c9061041e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638124b78e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016101d491906103a6565b6020604051808303816000875af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102179190610453565b90507fb111d62452d4b7bebad54711d279adbb62f1d7df4105d2fb421e20621ad58fdf8160405161024891906103a6565b60405180910390a150565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103378261030c565b9050919050565b6103478161032c565b811461035257600080fd5b50565b6000813590506103648161033e565b92915050565b6000602082840312156103805761037f610307565b5b600061038e84828501610355565b91505092915050565b6103a08161032c565b82525050565b60006020820190506103bb6000830184610397565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e20636c6f6e6520612073746f7265600082015250565b60006104086020836103c1565b9150610413826103d2565b602082019050919050565b60006020820190508181036000830152610437816103fb565b9050919050565b60008151905061044d8161033e565b92915050565b60006020828403121561046957610468610307565b5b60006104778482850161043e565b9150509291505056fea26469706673582212208bc3e20fab988a603179e772583d175952e0759284eca67dcf3bbfa6ed30070a64736f6c634300080b0033608060405234801561001057600080fd5b506101ba806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638124b78e14610030575b600080fd5b61004a6004803603810190610045919061012d565b610060565b6040516100579190610169565b60405180910390f35b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fa826100cf565b9050919050565b61010a816100ef565b811461011557600080fd5b50565b60008135905061012781610101565b92915050565b600060208284031215610143576101426100ca565b5b600061015184828501610118565b91505092915050565b610163816100ef565b82525050565b600060208201905061017e600083018461015a565b9291505056fea26469706673582212208bbd3c1d1523161e32f11297a09a8ddcd27fbec54ae23230524a48e1ceed606d64736f6c634300080b0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10 SWAP1 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x85E CODESIZE SUB DUP1 PUSH2 0x85E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x192 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x1DA DUP1 PUSH2 0x684 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP3 PUSH2 0x134 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F DUP2 PUSH2 0x154 JUMP JUMPDEST DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18C DUP2 PUSH2 0x166 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8 JUMPI PUSH2 0x1A7 PUSH2 0x12F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6 DUP5 DUP3 DUP6 ADD PUSH2 0x17D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4B6 DUP1 PUSH2 0x1CE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BD643F7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8124B78E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8ABF6077 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8124B78E PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST SWAP1 POP PUSH32 0xB111D62452D4B7BEBAD54711D279ADBB62F1D7DF4105D2FB421E20621AD58FDF DUP2 PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337 DUP3 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x32C JUMP JUMPDEST DUP2 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x364 DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH2 0x37F PUSH2 0x307 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP5 DUP3 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A0 DUP2 PUSH2 0x32C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E20636C6F6E6520612073746F7265 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 PUSH1 0x20 DUP4 PUSH2 0x3C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x413 DUP3 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x437 DUP2 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44D DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x307 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477 DUP5 DUP3 DUP6 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xC3 0xE2 0xF 0xAB SWAP9 DUP11 PUSH1 0x31 PUSH26 0xE772583D175952E0759284ECA67DCF3BBFA6ED30070A64736F6C PUSH4 0x4300080B STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8124B78E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x12D JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA DUP3 PUSH2 0xCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A DUP2 PUSH2 0xEF JUMP JUMPDEST DUP2 EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127 DUP2 PUSH2 0x101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143 JUMPI PUSH2 0x142 PUSH2 0xCA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151 DUP5 DUP3 DUP6 ADD PUSH2 0x118 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163 DUP2 PUSH2 0xEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD EXTCODECOPY SAR ISZERO 0x23 AND 0x1E ORIGIN CALL SLT SWAP8 LOG0 SWAP11 DUP14 0xDC 0xD2 PUSH32 0xBEC54AE23230524A48E1CEED606D64736F6C634300080B003300000000000000 ",
			"sourceMap": "3055:537:1:-:0;;;3172:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3151:39;;;;;;;;;;;;;;;;;;;;3363:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3408:10;3400:5;;:18;;;;;;;;;;;;;;;;;;3435:5;3428:4;;:12;;;;;;;;;;;;;;;;;;3363:84;3055:537;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;3055:537:1:-;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@cloneStore_95": {
					"entryPoint": 199,
					"id": 95,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@clone_33": {
					"entryPoint": 595,
					"id": 33,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@impl_40": {
					"entryPoint": 701,
					"id": 40,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@owner_38": {
					"entryPoint": 739,
					"id": 38,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_decode_t_address": {
					"entryPoint": 853,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_address_fromMemory": {
					"entryPoint": 1086,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 874,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address_fromMemory": {
					"entryPoint": 1107,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 919,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 1019,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": 934,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 1054,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
					"entryPoint": 961,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 812,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 780,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 775,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"store_literal_in_memory_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74": {
					"entryPoint": 978,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 830,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:3191:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:2",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:2"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:2"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:2",
										"type": ""
									}
								],
								"src": "7:75:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:2"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:2"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "404:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "411:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "400:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "400:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:2",
										"type": ""
									}
								],
								"src": "334:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "511:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "521:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "550:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "532:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "521:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "493:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "503:7:2",
										"type": ""
									}
								],
								"src": "466:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "611:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "668:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "677:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "680:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "670:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "670:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "670:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "659:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "641:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "631:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "631:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "624:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "624:43:2"
											},
											"nodeType": "YulIf",
											"src": "621:63:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "604:5:2",
										"type": ""
									}
								],
								"src": "568:122:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "748:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "758:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "780:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "767:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "767:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "758:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "823:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "796:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "796:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "796:33:2"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "726:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "734:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "742:5:2",
										"type": ""
									}
								],
								"src": "696:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "907:263:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "953:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "955:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "955:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "955:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "928:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "937:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "924:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "924:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "949:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "920:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "920:32:2"
											},
											"nodeType": "YulIf",
											"src": "917:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "1046:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1061:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1075:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1065:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1090:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1145:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "1100:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1100:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1090:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "877:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "888:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "900:6:2",
										"type": ""
									}
								],
								"src": "841:329:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1241:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1258:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1281:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "1263:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1263:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1251:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1251:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1251:37:2"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1229:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1236:3:2",
										"type": ""
									}
								],
								"src": "1176:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1398:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1408:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1420:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1431:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1416:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1416:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1408:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1488:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1501:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1512:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1497:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1497:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1444:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1444:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1444:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1370:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1382:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1393:4:2",
										"type": ""
									}
								],
								"src": "1300:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1624:73:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1641:3:2"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "1646:6:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1634:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1634:19:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1634:19:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1662:29:2",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1681:3:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1686:4:2",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1677:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1677:14:2"
											},
											"variableNames": [
												{
													"name": "updated_pos",
													"nodeType": "YulIdentifier",
													"src": "1662:11:2"
												}
											]
										}
									]
								},
								"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1596:3:2",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "1601:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "updated_pos",
										"nodeType": "YulTypedName",
										"src": "1612:11:2",
										"type": ""
									}
								],
								"src": "1528:169:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1809:76:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1831:6:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1839:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1827:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1827:14:2"
													},
													{
														"hexValue": "4f6e6c7920746865206f776e65722063616e20636c6f6e6520612073746f7265",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "1843:34:2",
														"type": "",
														"value": "Only the owner can clone a store"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1820:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1820:58:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1820:58:2"
										}
									]
								},
								"name": "store_literal_in_memory_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1801:6:2",
										"type": ""
									}
								],
								"src": "1703:182:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2037:220:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2047:74:2",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2113:3:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2118:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2054:58:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2054:67:2"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "2047:3:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2219:3:2"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74",
													"nodeType": "YulIdentifier",
													"src": "2130:88:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2130:93:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2130:93:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2232:19:2",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2243:3:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2248:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2239:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2239:12:2"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "2232:3:2"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2025:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2033:3:2",
										"type": ""
									}
								],
								"src": "1891:366:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2434:248:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2444:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2456:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2467:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2452:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2452:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2444:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2491:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2502:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2487:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2487:17:2"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2510:4:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2516:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2506:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2506:20:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2480:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2480:47:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2480:47:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2536:139:2",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "2670:4:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2544:124:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2544:131:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2536:4:2"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2414:9:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2429:4:2",
										"type": ""
									}
								],
								"src": "2263:419:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2751:80:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2761:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "2776:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2770:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2770:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2761:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2819:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "2792:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2792:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2792:33:2"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "2729:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2737:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2745:5:2",
										"type": ""
									}
								],
								"src": "2688:143:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2914:274:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2960:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "2962:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2962:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2962:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2935:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2944:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2931:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2931:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2956:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2927:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2927:32:2"
											},
											"nodeType": "YulIf",
											"src": "2924:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "3053:128:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3068:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3082:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3072:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3097:74:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3143:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3154:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3163:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "3107:31:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "3107:64:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3097:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2884:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2895:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2907:6:2",
										"type": ""
									}
								],
								"src": "2837:351:2"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can clone a store\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c462956dd95b960367e494f3c5c89bd3452dfaa1550db16636a10a517b60a74_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80637bd643f7146100515780638124b78e1461005b5780638abf60771461008b5780638da5cb5b146100a9575b600080fd5b6100596100c7565b005b6100756004803603810190610070919061036a565b610253565b60405161008291906103a6565b60405180910390f35b6100936102bd565b6040516100a091906103a6565b60405180910390f35b6100b16102e3565b6040516100be91906103a6565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c9061041e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638124b78e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016101d491906103a6565b6020604051808303816000875af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102179190610453565b90507fb111d62452d4b7bebad54711d279adbb62f1d7df4105d2fb421e20621ad58fdf8160405161024891906103a6565b60405180910390a150565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103378261030c565b9050919050565b6103478161032c565b811461035257600080fd5b50565b6000813590506103648161033e565b92915050565b6000602082840312156103805761037f610307565b5b600061038e84828501610355565b91505092915050565b6103a08161032c565b82525050565b60006020820190506103bb6000830184610397565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e20636c6f6e6520612073746f7265600082015250565b60006104086020836103c1565b9150610413826103d2565b602082019050919050565b60006020820190508181036000830152610437816103fb565b9050919050565b60008151905061044d8161033e565b92915050565b60006020828403121561046957610468610307565b5b60006104778482850161043e565b9150509291505056fea26469706673582212208bc3e20fab988a603179e772583d175952e0759284eca67dcf3bbfa6ed30070a64736f6c634300080b0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BD643F7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8124B78E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8ABF6077 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8124B78E PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST SWAP1 POP PUSH32 0xB111D62452D4B7BEBAD54711D279ADBB62F1D7DF4105D2FB421E20621AD58FDF DUP2 PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337 DUP3 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x32C JUMP JUMPDEST DUP2 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x364 DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH2 0x37F PUSH2 0x307 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP5 DUP3 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A0 DUP2 PUSH2 0x32C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E20636C6F6E6520612073746F7265 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 PUSH1 0x20 DUP4 PUSH2 0x3C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x413 DUP3 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x437 DUP2 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44D DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x307 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477 DUP5 DUP3 DUP6 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xC3 0xE2 0xF 0xAB SWAP9 DUP11 PUSH1 0x31 PUSH26 0xE772583D175952E0759284ECA67DCF3BBFA6ED30070A64736F6C PUSH4 0x4300080B STOP CALLER ",
			"sourceMap": "3055:537:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3453:137;;;:::i;:::-;;361:2690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3125:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3099:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3453:137;3297:5;;;;;;;;;;3283:19;;:10;:19;;;3275:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3502:20:::1;3525:5;;;;;;;;;;;:11;;;3537:4;;;;;;;;;;;3525:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3502:40;;3557:26;3570:12;3557:26;;;;;;:::i;:::-;;;;;;;;3492:98;3453:137::o:0;361:2690::-;410:14;475:19;505:6;497:15;;475:37;;1249:4;1243:11;1374:66;1351:5;1327:127;1871:11;1864:4;1857:5;1853:16;1846:37;2469:66;2446:4;2439:5;2435:16;2411:138;3030:4;3023:5;3020:1;3013:22;3003:32;;939:2106;;361:2690;;;:::o;3125:19::-;;;;;;;;;;;;;:::o;3099:20::-;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:182::-;1843:34;1839:1;1831:6;1827:14;1820:58;1703:182;:::o;1891:366::-;2033:3;2054:67;2118:2;2113:3;2054:67;:::i;:::-;2047:74;;2130:93;2219:3;2130:93;:::i;:::-;2248:2;2243:3;2239:12;2232:19;;1891:366;;;:::o;2263:419::-;2429:4;2467:2;2456:9;2452:18;2444:26;;2516:9;2510:4;2506:20;2502:1;2491:9;2487:17;2480:47;2544:131;2670:4;2544:131;:::i;:::-;2536:139;;2263:419;;;:::o;2688:143::-;2745:5;2776:6;2770:13;2761:22;;2792:33;2819:5;2792:33;:::i;:::-;2688:143;;;;:::o;2837:351::-;2907:6;2956:2;2944:9;2935:7;2931:23;2927:32;2924:119;;;2962:79;;:::i;:::-;2924:119;3082:1;3107:64;3163:7;3154:6;3143:9;3139:22;3107:64;:::i;:::-;3097:74;;3053:128;2837:351;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "241200",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"clone(address)": "infinite",
				"cloneStore()": "infinite",
				"impl()": "2536",
				"owner()": "2555"
			}
		},
		"methodIdentifiers": {
			"clone(address)": "8124b78e",
			"cloneStore()": "7bd643f7",
			"impl()": "8abf6077",
			"owner()": "8da5cb5b"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_impl",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "storeAddress",
					"type": "address"
				}
			],
			"name": "CloneSuccess",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "target",
					"type": "address"
				}
			],
			"name": "clone",
			"outputs": [
				{
					"internalType": "address",
					"name": "result",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "cloneStore",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "impl",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}